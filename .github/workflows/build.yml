name: Build

env:
  ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
  IMAGE_TAG: ${{ github.sha }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select environment to deploy (prod, dev)'
        required: true
        default: 'dev'
        type: choice
        options:
          - qa
          - prod

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    name: Build and Push
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Build React with Express (server-build)
        run: |
          VITE_API_URL=${{ vars.REACT_APP_API_URL }} \
          VITE_WS_URL=${{ vars.REACT_APP_WS_URL }} \
          VITE_API_DEV_URL=${{ vars.REACT_APP_API_URL }} \
          VITE_VAPID_PUBLIC_KEY=${{ vars.VITE_VAPID_PUBLIC_KEY }} \
          npm run server-build

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          # Build a docker container 
          docker build -f Dockerfile.aws -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

      - name: Push image to Amazon ECR
        id: push-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          # Push image to ECR.
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
